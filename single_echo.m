%Single echo filter: Echoes are simply generated by delay units
%Read in the sound data from the .wav file
[d,r]=audioread('speech.wav');
%Set the tap attenuation and delay
a = 0.8;
R = floor(r); %Delay = 1 second
%Difference equation: y[n] = x[n] + ax[n − R]
%Equivalently, by the transfer function: H(z) = 1 + az−R
num=[1,zeros(1,R-1),a];
den=(1);
%The output of the filter is computed using the function ’filter’
d1 = filter(num,den,d);
%Play the output of the filter
soundsc(d1,r);
%Plot the unit impulse response
subplot(3,2,1);
i =[1,zeros(1,R)];
d2= filter(num,den,i);
stem(d2);grid
xlabel('Sample index');
ylabel('Amplitude');
title(('(a)Unit impulse response'));
%Plot the original signal
subplot(3,2,3);
plot(abs(d));
xlabel('Sample index');
ylabel('Amplitude');
title(('(b)Original signal'));
%Plot the output signal
subplot(3,2,5);
plot(abs(d1));
xlabel('Sample index');
ylabel('Amplitude');
title(('(c)Output signal with artificial reverberation'));
%Plot the magnitude response
subplot(3,2,2);
[h1,w] = freqz(num,den,512);
plot(w/pi,20*log10(abs(h1)));grid
xlabel('Normalized Frequency (×π rad/sample)');
ylabel('Magnitude (dB)');
title(('(d)Magnitude response'));
%Plot the spectrogram of the original signal
subplot(3,2,4);
spectrogram(d,[],[],[],r,'yaxis')
title(('(e)Spectrogram of original signal'));
%Plot the spectrogram of the output signal
subplot(3,2,6);
spectrogram(d1,[],[],[],r,'yaxis')
title(['(f)Spectrogram of output signal with artificial reverberation']);